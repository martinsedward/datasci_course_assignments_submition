{"ts":1368380669862,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"#import simplejson\r\nimport json\r\nimport urllib\r\n#import urllib2\r\nimport sys\r\nimport re\r\n\r\ntry:\r\n    #Open sentiment file score and transform in dict \r\n    afinnfile = open(sys.argv[1])\r\n    scores = {} # initialize an empty dictionary\r\n    for line in afinnfile:\r\n      term, score  = line.split(\"\\t\")  # The file is tab-delimited. \"\\t\" means \"tab character\"\r\n      scores[term] = int(score)  # Convert the score to an integer.\r\n    \r\n      \r\n    #Open fr the livestream data\r\n    tweet_file = open(sys.argv[2])\r\n    \r\n    #will use to split from the space between the words\r\n    pattern_split = re.compile(r\"\\W+\")\r\n    \r\n    score = 0\r\n    scored_tweet = {}#lines containing tweet sentiment scored based in words of AFINN-111\r\n    scored_tweet_list = {}\r\n    zero_word_list = {}#lines containing words does not contained in AFINN-111\r\n    scored_tweet_aux = \"\"\r\n    index = 0\r\n    \r\n    #open tweet stream file, score the words and summarize the tweet, create zero word list \r\n    for jsonstring in tweet_file:#Line\r\n        for word in pattern_split.split(json.loads(jsonstring)[\"text\"].lower()):#Words of line\r\n            #receive the score.\r\n            score_aux = scores.get(word, 0)\r\n            #increment sum of socore    \r\n            score = score + score_aux\r\n            #increment scored tweet line contain words and tweet sentiment\r\n            scored_tweet_aux = scored_tweet_aux + \" \" +  word + \" \"#the words are separet for spaces\r\n            #if word isnt contained in AFINN-111 the score is 0\r\n            if score_aux == 0:\r\n                #populate a zero-word list\r\n                if len(word) > 2:#populate a zero-word list without space, and 2 letters word like \"is\", \"or\", etc\r\n                    zero_word_list[word] = word\r\n        #print str(score)\r\n        #increment the sumatized score value ot tweet\r\n        scored_tweet_list[index] = str(score) + \"\\t\" + scored_tweet_aux#the tweet are separate for tab\r\n        #after use, clear all\r\n        scored_tweet_aux = \"\"\r\n        score = 0\r\n        index = index + 1\r\n        \r\n    #check\r\n    for key, value in scored_tweet_list.iteritems() :\r\n        print key, value\r\n    #print zero_word_list\r\n    \r\n    #Close all opened files\r\n    tweet_file.close()\r\n    afinnfile.close()\r\n    \r\n    #based on the summarized tweet list, count positive and negative zero words apears\r\n    #read zero word list\r\n    score_aux = 0\r\n    for key, word in zero_word_list.iteritems():\r\n    #word = 'friend'\r\n        for key, value in scored_tweet_list.iteritems():\r\n            score, list_term  = value.split(\"\\t\")\r\n            if re.search(r\"\\s\" + str(word) + \"\\s\",  list_term):\r\n                if int(score) > 0:\r\n                    #print str(word) + \" - FOUND & POSITIVE\"\r\n                    score_aux = score_aux + 1\r\n                elif  int(score) < 0:\r\n                    #print str(word) + \" - NOT FOUND & NEGATIVE\"\r\n                    score_aux = score_aux - 1\r\n            #else:\r\n            #    score_aux = score_aux + 0\r\n                #print str(word) + \" - NOT FOUND\"\r\n        print str(word), str(score_aux)\r\n        score_aux = 0\r\nexcept: \r\n    pass"]],"start1":0,"start2":0,"length1":0,"length2":3142}]],"length":3142}
{"contributors":[],"silentsave":false,"ts":1368380843004,"patch":[[{"diffs":[[0,"#check\r\n    "],[1,"#"],[0,"for key, val"]],"start1":2065,"start2":2065,"length1":24,"length2":25},{"diffs":[[0,"ms() :\r\n    "],[1,"#"],[0,"    print ke"]],"start1":2121,"start2":2121,"length1":24,"length2":25}]],"length":3144,"saved":false}
