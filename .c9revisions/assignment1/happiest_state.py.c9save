{"ts":1368406008311,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"#import simplejson\r\nimport json\r\nimport urllib\r\n#import urllib2\r\nimport sys\r\nimport re\r\n\r\ntry:\r\n    #Open sentiment file score and transform in dict \r\n    #afinnfile = open(\"AFINN-111.txt\")\r\n    afinnfile = open(sys.argv[1])\r\n    scores = {} # initialize an empty dictionary\r\n    for line in afinnfile:\r\n      term, score  = line.split(\"\\t\")  # The file is tab-delimited. \"\\t\" means \"tab character\"\r\n      scores[term] = int(score)  # Convert the score to an integer.\r\n    \r\n    #US Cities and States\r\n    state = {}\r\n    state['Birmingham']='AL'\r\n    state['Montgomery']='AL'\r\n    state['Mobile']='AL'\r\n    state['Huntsville']='AL'\r\n    state['Anchorage']='AK'\r\n    state['Phoenix']='AZ'\r\n    state['Tucson']='AZ'\r\n    state['Mesa']='AZ'\r\n    state['Chandler']='AZ'\r\n    state['Glendale']='AZ'\r\n    state['Scottsdale']='AZ'\r\n    state['Gilbert']='AZ'\r\n    state['Tempe']='AZ'\r\n    state['Peoria']='AZ'\r\n    state['Surprise']='AZ'\r\n    state['Little Rock']='AR'\r\n    state['Los Angeles']='CA'\r\n    state['San Diego']='CA'\r\n    state['San Jose']='CA'\r\n    state['San Francisco']='CA'\r\n    state['Fresno']='CA'\r\n    state['Sacramento']='CA'\r\n    state['Long Beach']='CA'\r\n    state['Oakland']='CA'\r\n    state['Bakersfield']='CA'\r\n    state['Anaheim']='CA'\r\n    state['Santa Ana']='CA'\r\n    state['Riverside']='CA'\r\n    state['Stockton']='CA'\r\n    state['Chula Vista']='CA'\r\n    state['Fremont']='CA'\r\n    state['Irvine']='CA'\r\n    state['San Bernardino']='CA'\r\n    state['Modesto']='CA'\r\n    state['Oxnard']='CA'\r\n    state['Fontana']='CA'\r\n    state['Moreno Valley']='CA'\r\n    state['Glendale']='CA'\r\n    state['Huntington Beach']='CA'\r\n    state['Santa Clarita']='CA'\r\n    state['Garden Grove']='CA'\r\n    state['Oceanside']='CA'\r\n    state['Santa Rosa']='CA'\r\n    state['Rancho Cucamonga']='CA'\r\n    state['Ontario']='CA'\r\n    state['Lancaster']='CA'\r\n    state['Corona']='CA'\r\n    state['Elk Grove']='CA'\r\n    state['Palmdale']='CA'\r\n    state['Salinas']='CA'\r\n    state['Pomona']='CA'\r\n    state['Torrance']='CA'\r\n    state['Hayward']='CA'\r\n    state['Escondido']='CA'\r\n    state['Sunnyvale']='CA'\r\n    state['Orange']='CA'\r\n    state['Pasadena']='CA'\r\n    state['Fullerton']='CA'\r\n    state['Thousand Oaks']='CA'\r\n    state['Visalia']='CA'\r\n    state['Simi Valley']='CA'\r\n    state['Concord']='CA'\r\n    state['Roseville']='CA'\r\n    state['Santa Clara']='CA'\r\n    state['Victorville']='CA'\r\n    state['Vallejo']='CA'\r\n    state['El Monte']='CA'\r\n    state['Berkeley']='CA'\r\n    state['Downey']='CA'\r\n    state['Costa Mesa']='CA'\r\n    state['Inglewood']='CA'\r\n    state['San Buenaventura (Ventura)']='CA'\r\n    state['Carlsbad']='CA'\r\n    state['West Covina']='CA'\r\n    state['Norwalk']='CA'\r\n    state['Fairfield']='CA'\r\n    state['Murrieta']='CA'\r\n    state['Richmond']='CA'\r\n    state['Burbank']='CA'\r\n    state['Antioch']='CA'\r\n    state['Temecula']='CA'\r\n    state['Daly City']='CA'\r\n    state['El Cajon']='CA'\r\n    state['Rialto']='CA'\r\n    state['Santa Maria']='CA'\r\n    state['Denver']='CO'\r\n    state['Colorado Springs']='CO'\r\n    state['Aurora']='CO'\r\n    state['Fort Collins']='CO'\r\n    state['Lakewood']='CO'\r\n    state['Thornton']='CO'\r\n    state['Westminster']='CO'\r\n    state['Pueblo']='CO'\r\n    state['Arvada']='CO'\r\n    state['Centennial']='CO'\r\n    state['Bridgeport']='CT'\r\n    state['New Haven']='CT'\r\n    state['Hartford']='CT'\r\n    state['Stamford']='CT'\r\n    state['Waterbury']='CT'\r\n    state['Washington']='DC'\r\n    state['Jacksonville']='FL'\r\n    state['Miami']='FL'\r\n    state['Tampa']='FL'\r\n    state['St. Petersburg']='FL'\r\n    state['Orlando']='FL'\r\n    state['Hialeah']='FL'\r\n    state['Tallahassee']='FL'\r\n    state['Fort Lauderdale']='FL'\r\n    state['Port St. Lucie']='FL'\r\n    state['Pembroke Pines']='FL'\r\n    state['Cape Coral']='FL'\r\n    state['Hollywood']='FL'\r\n    state['Gainesville']='FL'\r\n    state['Miramar']='FL'\r\n    state['Coral Springs']='FL'\r\n    state['Miami Gardens']='FL'\r\n    state['Clearwater']='FL'\r\n    state['Palm Bay']='FL'\r\n    state['Pompano Beach']='FL'\r\n    state['West Palm Beach']='FL'\r\n    state['Atlanta']='GA'\r\n    state['Augusta']='GA'\r\n    state['Columbus']='GA'\r\n    state['Savannah']='GA'\r\n    state['Athens']='GA'\r\n    state['Honolulu']='HI'\r\n    state['Boise']='ID'\r\n    state['Chicago']='IL'\r\n    state['Aurora']='IL'\r\n    state['Rockford']='IL'\r\n    state['Joliet']='IL'\r\n    state['Naperville']='IL'\r\n    state['Springfield']='IL'\r\n    state['Peoria']='IL'\r\n    state['Elgin']='IL'\r\n    state['Indianapolis']='IN'\r\n    state['Fort Wayne']='IN'\r\n    state['Evansville']='IN'\r\n    state['South Bend']='IN'\r\n    state['Des Moines']='IA'\r\n    state['Cedar Rapids']='IA'\r\n    state['Davenport']='IA'\r\n    state['Wichita']='KS'\r\n    state['Overland Park']='KS'\r\n    state['Kansas City']='KS'\r\n    state['Topeka']='KS'\r\n    state['Olathe']='KS'\r\n    state['Louisville']='KY'\r\n    state['Lexington']='KY'\r\n    state['New Orleans']='LA'\r\n    state['Baton Rouge']='LA'\r\n    state['Shreveport']='LA'\r\n    state['Lafayette']='LA'\r\n    state['Baltimore']='MD'\r\n    state['Boston']='MA'\r\n    state['Worcester']='MA'\r\n    state['Springfield']='MA'\r\n    state['Lowell']='MA'\r\n    state['Cambridge']='MA'\r\n    state['Detroit']='MI'\r\n    state['Grand Rapids']='MI'\r\n    state['Warren']='MI'\r\n    state['Sterling Heights']='MI'\r\n    state['Ann Arbor']='MI'\r\n    state['Lansing']='MI'\r\n    state['Flint']='MI'\r\n    state['Minneapolis']='MN'\r\n    state['Saint Paul']='MN'\r\n    state['Rochester']='MN'\r\n    state['Jackson']='MS'\r\n    state['Kansas City']='MO'\r\n    state['St. Louis']='MO'\r\n    state['Springfield']='MO'\r\n    state['Independence']='MO'\r\n    state['Columbia']='MO'\r\n    state['Billings']='MT'\r\n    state['Omaha']='NE'\r\n    state['Lincoln']='NE'\r\n    state['Las Vegas']='NV'\r\n    state['Henderson']='NV'\r\n    state['Reno']='NV'\r\n    state['North Las Vegas']='NV'\r\n    state['Manchester']='NH'\r\n    state['Newark']='NJ'\r\n    state['Jersey City']='NJ'\r\n    state['Paterson']='NJ'\r\n    state['Elizabeth']='NJ'\r\n    state['Albuquerque']='NM'\r\n    state['New York']='NY'\r\n    state['Buffalo']='NY'\r\n    state['Rochester']='NY'\r\n    state['Yonkers']='NY'\r\n    state['Syracuse']='NY'\r\n    state['Charlotte']='NC'\r\n    state['Raleigh']='NC'\r\n    state['Greensboro']='NC'\r\n    state['Durham']='NC'\r\n    state['Winston Salem']='NC'\r\n    state['Fayetteville']='NC'\r\n    state['Cary']='NC'\r\n    state['Wilmington']='NC'\r\n    state['High Point']='NC'\r\n    state['Fargo']='ND'\r\n    state['Columbus']='OH'\r\n    state['Cleveland']='OH'\r\n    state['Cincinnati']='OH'\r\n    state['Toledo']='OH'\r\n    state['Akron']='OH'\r\n    state['Dayton']='OH'\r\n    state['Oklahoma City']='OK'\r\n    state['Tulsa']='OK'\r\n    state['Norman']='OK'\r\n    state['Broken Arrow']='OK'\r\n    state['Portland']='OR'\r\n    state['Eugene']='OR'\r\n    state['Salem']='OR'\r\n    state['Gresham']='OR'\r\n    state['Philadelphia']='PA'\r\n    state['Pittsburgh']='PA'\r\n    state['Allentown']='PA'\r\n    state['Erie']='PA'\r\n    state['Providence']='RI'\r\n    state['Columbia']='SC'\r\n    state['Charleston']='SC'\r\n    state['Sioux Falls']='SD'\r\n    state['Memphis']='TN'\r\n    state['Nashville']='TN'\r\n    state['Knoxville']='TN'\r\n    state['Chattanooga']='TN'\r\n    state['Clarksville']='TN'\r\n    state['Murfreesboro']='TN'\r\n    state['Houston']='TX'\r\n    state['San Antonio']='TX'\r\n    state['Dallas']='TX'\r\n    state['Austin']='TX'\r\n    state['Fort Worth']='TX'\r\n    state['El Paso']='TX'\r\n    state['Arlington']='TX'\r\n    state['Corpus Christi']='TX'\r\n    state['Plano']='TX'\r\n    state['Laredo']='TX'\r\n    state['Lubbock']='TX'\r\n    state['Garland']='TX'\r\n    state['Irving']='TX'\r\n    state['Amarillo']='TX'\r\n    state['Grand Prairie']='TX'\r\n    state['Brownsville']='TX'\r\n    state['Pasadena']='TX'\r\n    state['Mesquite']='TX'\r\n    state['McKinney']='TX'\r\n    state['McAllen']='TX'\r\n    state['Killeen']='TX'\r\n    state['Waco']='TX'\r\n    state['Carrollton']='TX'\r\n    state['Frisco']='TX'\r\n    state['Beaumont']='TX'\r\n    state['Abilene']='TX'\r\n    state['Denton']='TX'\r\n    state['Midland']='TX'\r\n    state['Round Rock']='TX'\r\n    state['Wichita Falls']='TX'\r\n    state['Odessa']='TX'\r\n    state['Richardson']='TX'\r\n    state['Salt Lake City']='UT'\r\n    state['West Valley City']='UT'\r\n    state['Provo']='UT'\r\n    state['West Jordan']='UT'\r\n    state['Virginia Beach']='VA'\r\n    state['Norfolk']='VA'\r\n    state['Chesapeake']='VA'\r\n    state['Richmond']='VA'\r\n    state['Newport News']='VA'\r\n    state['Alexandria']='VA'\r\n    state['Hampton']='VA'\r\n    state['Seattle']='WA'\r\n    state['Spokane']='WA'\r\n    state['Tacoma']='WA'\r\n    state['Vancouver']='WA'\r\n    state['Bellevue']='WA'\r\n    state['Kent']='WA'\r\n    state['Everett']='WA'\r\n    state['Milwaukee']='WI'\r\n    state['Madison']='WI'\r\n    state['Green Bay']='WI'\r\n    \r\n    \r\n    \r\n      \r\n    #Open fw the sentiment file to output\r\n    #sentiment_file = open('sentiment_file_derived.txt','w')\r\n    \r\n    #Open fr the livestream data\r\n    tweet_file = open(sys.argv[2])\r\n    \r\n    #will use to split from the space between the words\r\n    pattern_split = re.compile(r\"\\W+\")\r\n    \r\n    score = 0\r\n    word_aux = \"\"\r\n    state_aux = \"\"\r\n    #index = 0\r\n    \r\n    UF = {}\r\n    for jsonstring in tweet_file:#Line\r\n        if json.loads(jsonstring)['place'] != None:\r\n            if str(json.loads(jsonstring)['place']['country_code']) == 'US':\r\n                for key, value in state.iteritems():\r\n                    if str(json.loads(jsonstring)['place']['name']) in key:#check if the citie in place.name are a valid citie of US state\r\n                        for word in pattern_split.split(json.loads(jsonstring)[\"text\"].lower()):#Words of line\r\n                            score = score + scores.get(word, 0)\r\n                            word_aux = word_aux + str(word) + \" \"\r\n                            state_aux = json.loads(jsonstring)['place']['country_code'] + \" - \" + json.loads(jsonstring)['place']['name'] + \" - \" + value #  + \" - \" + json.loads(jsonstring)['user']['location']\r\n                        \r\n                        #print str(score),state_aux, \" - [\" + word_aux + \"]\"\r\n                        #Calculate whats the more happy state\r\n                        for key_uf, value_uf in UF.iteritems():\r\n                            score_uf, uf  = value_uf.split(\"\\t\")\r\n                            if str(uf) == str(value):\r\n                                score = score + int(score_uf)\r\n                            \r\n                        UF[value] = str(score) + \"\\t\" +value\r\n                        #index = index + 1\r\n                        \r\n                        score = 0\r\n                        state_aux = \"\"\r\n                        word_aux = \"\"\r\n                        break\r\n          \r\n    \r\n    tweet_file.close()\r\n    afinnfile.close()\r\n    #Calculate whats the more happy state\r\n    Happy_UF = \"\"\r\n    score_aux = -100\r\n    for key, value in sorted(UF.iteritems(), key=lambda (k,v): (v,k)):\r\n        score, uf  = value.split(\"\\t\")\r\n        if int(score) > score_aux:\r\n            score_aux = int(score)\r\n            Happy_UF = uf\r\n        #print \"%s: %s\" % (score, uf)\r\n        \r\n    #print \"Happiest UF is \"+Happy_UF + \" with \" + str(score_aux)\r\n    print Happy_UF\r\nexcept: \r\n    pass    \r\n"]],"start1":0,"start2":0,"length1":0,"length2":11203}]],"length":11203}
{"contributors":[],"silentsave":false,"ts":1368406880182,"patch":[[{"diffs":[[0,"   #"],[-1,"US Cities and States\r\n    state = {}\r\n    state['Birmingham']='AL'\r\n    state['Montgomery']='AL'\r\n    state['Mobile']='AL'\r\n    state['Huntsville']='AL'\r\n    state['Anchorage']='AK'\r\n    state['Phoenix']='AZ'\r\n    state['Tucson']='AZ'\r\n    state['Mesa']='AZ'\r\n    state['Chandler']='AZ'\r\n    state['Glendale']='AZ'\r\n    state['Scottsdale']='AZ'\r\n    state['Gilbert']='AZ'\r\n    state['Tempe']='AZ'\r\n    state['Peoria']='AZ'\r\n    state['Surprise']='AZ'\r\n    state['Little Rock']='AR'\r\n    state['Los Angeles']='CA'\r\n    state['San Diego']='CA'\r\n    state['San Jose']='CA'\r\n    state['San Francisco']='CA'\r\n    state['Fresno']='CA'\r\n    state['Sacramento']='CA'\r\n    state['Long Beach']='CA'\r\n    state['Oakland']='CA'\r\n    state['Bakersfield']='CA'\r\n    state['Anaheim']='CA'\r\n    state['Santa Ana']='CA'\r\n    state['Riverside']='CA'\r\n    state['Stockton']='CA'\r\n    state['Chula Vista']='CA'\r\n    state['Fremont']='CA'\r\n    state['Irvine']='CA'\r\n    state['San Bernardino']='CA'\r\n    state['Modesto']='CA'\r\n    state['Oxnard']='CA'\r\n    state['Fontana']='CA'\r\n    state['Moreno Valley']='CA'\r\n    state['Glendale']='CA'\r\n    state['Huntington Beach']='CA'\r\n    state['Santa Clarita']='CA'\r\n    state['Garden Grove']='CA'\r\n    state['Oceanside']='CA'\r\n    state['Santa Rosa']='CA'\r\n    state['Rancho Cucamonga']='CA'\r\n    state['Ontario']='CA'\r\n    state['Lancaster']='CA'\r\n    state['Corona']='CA'\r\n    state['Elk Grove']='CA'\r\n    state['Palmdale']='CA'\r\n    state['Salinas']='CA'\r\n    state['Pomona']='CA'\r\n    state['Torrance']='CA'\r\n    state['Hayward']='CA'\r\n    state['Escondido']='CA'\r\n    state['Sunnyvale']='CA'\r\n    state['Orange']='CA'\r\n    state['Pasadena']='CA'\r\n    state['Fullerton']='CA'\r\n    state['Thousand Oaks']='CA'\r\n    state['Visalia']='CA'\r\n    state['Simi Valley']='CA'\r\n    state['Concord']='CA'\r\n    state['Roseville']='CA'\r\n    state['Santa Clara']='CA'\r\n    state['Victorville']='CA'\r\n    state['Vallejo']='CA'\r\n    state['El Monte']='CA'\r\n    state['Berkeley']='CA'\r\n    state['Downey']='CA'\r\n    state['Costa Mesa']='CA'\r\n    state['Inglewood']='CA'\r\n    state['San Buenaventura (Ventura)']='CA'\r\n    state['Carlsbad']='CA'\r\n    state['West Covina']='CA'\r\n    state['Norwalk']='CA'\r\n    state['Fairfield']='CA'\r\n    state['Murrieta']='CA'\r\n    state['Richmond']='CA'\r\n    state['Burbank']='CA'\r\n    state['Antioch']='CA'\r\n    state['Temecula']='CA'\r\n    state['Daly City']='CA'\r\n    state['El Cajon']='CA'\r\n    state['Rialto']='CA'\r\n    state['Santa Maria']='CA'\r\n    state['Denver']='CO'\r\n    state['Colorado Springs']='CO'\r\n    state['Aurora']='CO'\r\n    state['Fort Collins']='CO'\r\n    state['Lakewood']='CO'\r\n    state['Thornton']='CO'\r\n    state['Westminster']='CO'\r\n    state['Pueblo']='CO'\r\n    state['Arvada']='CO'\r\n    state['Centennial']='CO'\r\n    state['Bridgeport']='CT'\r\n    state['New Haven']='CT'\r\n    state['Hartford']='CT'\r\n    state['Stamford']='CT'\r\n    state['Waterbury']='CT'\r\n    state['Washington']='DC'\r\n    state['Jacksonville']='FL'\r\n    state['Miami']='FL'\r\n    state['Tampa']='FL'\r\n    state['St. Petersburg']='FL'\r\n    state['Orlando']='FL'\r\n    state['Hialeah']='FL'\r\n    state['Tallahassee']='FL'\r\n    state['Fort Lauderdale']='FL'\r\n    state['Port St. Lucie']='FL'\r\n    state['Pembroke Pines']='FL'\r\n    state['Cape Coral']='FL'\r\n    state['Hollywood']='FL'\r\n    state['Gainesville']='FL'\r\n    state['Miramar']='FL'\r\n    state['Coral Springs']='FL'\r\n    state['Miami Gardens']='FL'\r\n    state['Clearwater']='FL'\r\n    state['Palm Bay']='FL'\r\n    state['Pompano Beach']='FL'\r\n    state['West Palm Beach']='FL'\r\n    state['Atlanta']='GA'\r\n    state['Augusta']='GA'\r\n    state['Columbus']='GA'\r\n    state['Savannah']='GA'\r\n    state['Athens']='GA'\r\n    state['Honolulu']='HI'\r\n    state['Boise']='ID'\r\n    state['Chicago']='IL'\r\n    state['Aurora']='IL'\r\n    state['Rockford']='IL'\r\n    state['Joliet']='IL'\r\n    state['Naperville']='IL'\r\n    state['Springfield']='IL'\r\n    state['Peoria']='IL'\r\n    state['Elgin']='IL'\r\n    state['Indianapolis']='IN'\r\n    state['Fort Wayne']='IN'\r\n    state['Evansville']='IN'\r\n    state['South Bend']='IN'\r\n    state['Des Moines']='IA'\r\n    state['Cedar Rapids']='IA'\r\n    state['Davenport']='IA'\r\n    state['Wichita']='KS'\r\n    state['Overland Park']='KS'\r\n    state['Kansas City']='KS'\r\n    state['Topeka']='KS'\r\n    state['Olathe']='KS'\r\n    state['Louisville']='KY'\r\n    state['Lexington']='KY'\r\n    state['New Orleans']='LA'\r\n    state['Baton Rouge']='LA'\r\n    state['Shreveport']='LA'\r\n    state['Lafayette']='LA'\r\n    state['Baltimore']='MD'\r\n    state['Boston']='MA'\r\n    state['Worcester']='MA'\r\n    state['Springfield']='MA'\r\n    state['Lowell']='MA'\r\n    state['Cambridge']='MA'\r\n    state['Detroit']='MI'\r\n    state['Grand Rapids']='MI'\r\n    state['Warren']='MI'\r\n    state['Sterling Heights']='MI'\r\n    state['Ann Arbor']='MI'\r\n    state['Lansing']='MI'\r\n    state['Flint']='MI'\r\n    state['Minneapolis']='MN'\r\n    state['Saint Paul']='MN'\r\n    state['Rochester']='MN'\r\n    state['Jackson']='MS'\r\n    state['Kansas City']='MO'\r\n    state['St. Louis']='MO'\r\n    state['Springfield']='MO'\r\n    state['Independence']='MO'\r\n    state['Columbia']='MO'\r\n    state['Billings']='MT'\r\n    state['Omaha']='NE'\r\n    state['Lincoln']='NE'\r\n    state['Las Vegas']='NV'\r\n    state['Henderson']='NV'\r\n    state['Reno']='NV'\r\n    state['North Las Vegas']='NV'\r\n    state['Manchester']='NH'\r\n    state['Newark']='NJ'\r\n    state['Jersey City']='NJ'\r\n    state['Paterson']='NJ'\r\n    state['Elizabeth']='NJ'\r\n    state['Albuquerque']='NM'\r\n    state['New York']='NY'\r\n    state['Buffalo']='NY'\r\n    state['Rochester']='NY'\r\n    state['Yonkers']='NY'\r\n    state['Syracuse']='NY'\r\n    state['Charlotte']='NC'\r\n    state['Raleigh']='NC'\r\n    state['Greensboro']='NC'\r\n    state['Durham']='NC'\r\n    state['Winston Salem']='NC'\r\n    state['Fayetteville']='NC'\r\n    state['Cary']='NC'\r\n    state['Wilmington']='NC'\r\n    state['High Point']='NC'\r\n    state['Fargo']='ND'\r\n    state['Columbus']='OH'\r\n    state['Cleveland']='OH'\r\n    state['Cincinnati']='OH'\r\n    state['Toledo']='OH'\r\n    state['Akron']='OH'\r\n    state['Dayton']='OH'\r\n    state['Oklahoma City']='OK'\r\n    state['Tulsa']='OK'\r\n    state['Norman']='OK'\r\n    state['Broken Arrow']='OK'\r\n    state['Portland']='OR'\r\n    state['Eugene']='OR'\r\n    state['Salem']='OR'\r\n    state['Gresham']='OR'\r\n    state['Philadelphia']='PA'\r\n    state['Pittsburgh']='PA'\r\n    state['Allentown']='PA'\r\n    state['Erie']='PA'\r\n    state['Providence']='RI'\r\n    state['Columbia']='SC'\r\n    state['Charleston']='SC'\r\n    state['Sioux Falls']='SD'\r\n    state['Memphis']='TN'\r\n    state['Nashville']='TN'\r\n    state['Knoxville']='TN'\r\n    state['Chattanooga']='TN'\r\n    state['Clarksville']='TN'\r\n    state['Murfreesboro']='TN'\r\n    state['Houston']='TX'\r\n    state['San Antonio']='TX'\r\n    state['Dallas']='TX'\r\n    state['Austin']='TX'\r\n    state['Fort Worth']='TX'\r\n    state['El Paso']='TX'\r\n    state['Arlington']='TX'\r\n    state['Corpus Christi']='TX'\r\n    state['Plano']='TX'\r\n    state['Laredo']='TX'\r\n    state['Lubbock']='TX'\r\n    state['Garland']='TX'\r\n    state['Irving']='TX'\r\n    state['Amarillo']='TX'\r\n    state['Grand Prairie']='TX'\r\n    state['Brownsville']='TX'\r\n    state['Pasadena']='TX'\r\n    state['Mesquite']='TX'\r\n    state['McKinney']='TX'\r\n    state['McAllen']='TX'\r\n    state['Killeen']='TX'\r\n    state['Waco']='TX'\r\n    state['Carrollton']='TX'\r\n    state['Frisco']='TX'\r\n    state['Beaumont']='TX'\r\n    state['Abilene']='TX'\r\n    state['Denton']='TX'\r\n    state['Midland']='TX'\r\n    state['Round Rock']='TX'\r\n    state['Wichita Falls']='TX'\r\n    state['Odessa']='TX'\r\n    state['Richardson']='TX'\r\n    state['Salt Lake City']='UT'\r\n    state['West Valley City']='UT'\r\n    state['Provo']='UT'\r\n    state['West Jordan']='UT'\r\n    state['Virginia Beach']='VA'\r\n    state['Norfolk']='VA'\r\n    state['Chesapeake']='VA'\r\n    state['Richmond']='VA'\r\n    state['Newport News']='VA'\r\n    state['Alexandria']='VA'\r\n    state['Hampton']='VA'\r\n    state['Seattle']='WA'\r\n    state['Spokane']='WA'\r\n    state['Tacoma']='WA'\r\n    state['Vancouver']='WA'\r\n    state['Bellevue']='WA'\r\n    state['Kent']='WA'\r\n    state['Everett']='WA'\r\n    state['Milwaukee']='WI'\r\n    state['Madison']='WI'\r\n    state['Green Bay']='WI'\r\n    \r\n    \r\n    \r\n      \r\n    #Open fw the sentiment file to output\r\n    #sentiment_file = open('sentiment_file_derived.txt','w')\r\n    \r\n    #Open fr the livestream data\r\n    tweet_file = open(sys.argv[2])\r\n    \r\n    #will use to split from the space between the words\r\n    pattern_split = re.compile(r\"\\W+\")\r\n    \r\n    score = 0\r\n    word_aux = \"\"\r\n    state_aux = \"\"\r\n    #index = 0\r\n    \r\n    UF = {}\r\n    for jsonstring in tweet_file:#Line\r\n        if json.loads(jsonstring)['place'] != None:\r\n            if str(json.loads(jsonstring)['place']['country_code']) == 'US':\r\n                for key, value in state.iteritems():\r\n                    if str(json.loads(jsonstring)['place']['name']) in key:#check if the citie in place.name are a valid citie of US state\r\n                        for word in pattern_split.split(json.loads(jsonstring)[\"text\"].lower()):#Words of line\r\n                            score = score + scores.get(word, 0)\r\n                            word_aux = word_aux + str(word) + \" \"\r\n                            state_aux = json.loads(jsonstring)['place']['country_code'] + \" - \" + json.loads(jsonstring)['place']['name'] + \" - \" + value #  + \" - \" + json.loads(jsonstring)['user']['location']\r\n                        \r\n                        #print str(score),state_aux, \" - [\" + word_aux + \"]\"\r\n                        #Calculate whats the more happy state\r\n                        for key_uf, value_uf in UF.iteritems():\r\n                            score_uf, uf  = value_uf.split(\"\\t\")\r\n                            if str(uf) == str(value):\r\n                                score = score + int(score_uf)\r\n                            \r\n                        UF[value] = str(score) + \"\\t\" +value\r\n                        #index = index + 1\r\n                        \r\n                        score = 0\r\n                        state_aux = \"\"\r\n                        word_aux = \"\"\r\n        "],[1,"Open fw the sentiment file to output\r\n    #sentiment_file = open('sentiment_file_derived.txt','w')\r\n    \r\n    #Open fr the livestream data\r\n    tweet_file = open(sys.argv[2])\r\n    \r\n    #will use to split from the space between the words\r\n    pattern_split = re.compile(r\"\\W+\")\r\n    \r\n    score = 0\r\n    word_aux = \"\"\r\n    state_aux = \"\"\r\n    #index = 0\r\n    \r\n    UF = {}\r\n    for jsonstring in tweet_file:#Line\r\n        if json.loads(jsonstring)['place'] != None:\r\n            if str(json.loads(jsonstring)['place']['country_code']) == 'US':\r\n                #for key, value in state.iteritems():\r\n                #    if str(json.loads(jsonstring)['place']['name']) in key:#check if the citie in place.name are a valid citie of US state\r\n                for word in pattern_split.split(json.loads(jsonstring)[\"text\"].lower()):#Words of line\r\n                    score = score + scores.get(word, 0)\r\n                    word_aux = word_aux + str(word) + \" \"\r\n                    citie, value = json.loads(jsonstring)['place']['full_name'].split(\",\")\r\n                    #state_aux = json.loads(jsonstring)['place']['country_code'] + \" - \" + json.loads(jsonstring)['place']['name'] + \" - \" + value #  + \" - \" + json.loads(jsonstring)['user']['location']\r\n                \r\n                #print str(score),state_aux, \" - [\" + word_aux + \"]\"\r\n                #Calculate whats the more happy state\r\n                for key_uf, value_uf in UF.iteritems():\r\n                    score_uf, uf  = value_uf.split(\"\\t\")\r\n                    if str(uf) == str(value):\r\n                        score = score + int(score_uf)\r\n                    \r\n                UF[value] = str(score) + \"\\t\" +value\r\n                #index = index + 1\r\n                \r\n                score = 0\r\n                state_aux = \"\"\r\n                word_aux = \"\"\r\n"],[0,"    "]],"start1":476,"start2":476,"length1":10188,"length2":1845}]],"length":2860,"saved":false}
{"ts":1368406934908,"patch":[[{"diffs":[[0,"        "],[-1,"#"],[0,"state_au"]],"start1":1545,"start2":1545,"length1":17,"length2":16},{"diffs":[[0,"            "],[-1,"#"],[0,"print str(sc"]],"start1":1758,"start2":1758,"length1":25,"length2":24},{"diffs":[[0,"uf\r\n        "],[-1,"#"],[0,"print \"%s: %"]],"start1":2694,"start2":2694,"length1":25,"length2":24},{"diffs":[[0,"  \r\n    "],[-1,"#"],[0,"print \"H"]],"start1":2742,"start2":2742,"length1":17,"length2":16},{"diffs":[[0,"e_aux)\r\n    "],[1,"#"],[0,"print Happy_"]],"start1":2804,"start2":2804,"length1":24,"length2":25}]],"length":2857,"saved":false}
{"ts":1368407190654,"patch":[[{"diffs":[[0,"\" + "],[-1,"json.loads(jsonstring)['place']['name']"],[1,"citie"],[0," + \""]],"start1":1619,"start2":1619,"length1":47,"length2":13}]],"length":2823,"saved":false}
{"ts":1368407297518,"patch":[[{"diffs":[[0,"                "],[1,"#"],[0,"state_aux = json"]],"start1":1537,"start2":1537,"length1":32,"length2":33},{"diffs":[[0,"            "],[1,"#"],[0,"print str(sc"]],"start1":1725,"start2":1725,"length1":24,"length2":25},{"diffs":[[0,"uf\r\n        "],[1,"#"],[0,"print \"%s: %"]],"start1":2662,"start2":2662,"length1":24,"length2":25},{"diffs":[[0,"  \r\n    "],[1,"#"],[0,"print \"H"]],"start1":2711,"start2":2711,"length1":16,"length2":17},{"diffs":[[0,"e_aux)\r\n    "],[-1,"#"],[0,"print Happy_"]],"start1":2774,"start2":2774,"length1":25,"length2":24}]],"length":2826,"saved":false}
{"ts":1368407431694,"patch":[[{"diffs":[[0,"            "],[1,"\r\n            "],[0,"    citie, v"]],"start1":1445,"start2":1445,"length1":24,"length2":38},{"diffs":[[0,"split(\",\")\r\n"],[-1,"    "],[0,"            "]],"start1":1535,"start2":1535,"length1":28,"length2":24}]],"length":2836,"saved":false}
{"ts":1368407562810,"patch":[[{"diffs":[[0,"split(\",\")\r\n"],[1,"                UF[value] = str(score) + \"\\t\" +value\r\n"],[0,"            "]],"start1":1535,"start2":1535,"length1":24,"length2":78}]],"length":2890,"saved":false}
{"ts":1368407613905,"patch":[[{"diffs":[[0,"        "],[-1,"#"],[0,"state_au"]],"start1":1609,"start2":1609,"length1":17,"length2":16},{"diffs":[[0,"            "],[-1,"#"],[0,"print str(sc"]],"start1":1788,"start2":1788,"length1":25,"length2":24},{"diffs":[[0,"uf\r\n        "],[-1,"#"],[0,"print \"%s: %"]],"start1":2724,"start2":2724,"length1":25,"length2":24},{"diffs":[[0,"  \r\n    "],[-1,"#"],[0,"print \"H"]],"start1":2772,"start2":2772,"length1":17,"length2":16},{"diffs":[[0,"e_aux)\r\n    "],[1,"#"],[0,"print Happy_"]],"start1":2834,"start2":2834,"length1":24,"length2":25}]],"length":2887,"saved":false}
{"ts":1368408010343,"patch":[[{"diffs":[[0,"                "],[1,"#"],[0,"word_aux = word_"]],"start1":1386,"start2":1386,"length1":32,"length2":33},{"diffs":[[0," + \" \"\r\n"],[-1,""],[0,"        "]],"start1":1434,"start2":1434,"length1":16,"length2":16},{"diffs":[[0,"                "],[1,"#"],[0,"UF[value] = str("]],"start1":1548,"start2":1548,"length1":32,"length2":33},{"diffs":[[0,"                "],[1,"#"],[0,"state_aux = json"]],"start1":1603,"start2":1603,"length1":32,"length2":33},{"diffs":[[0,"              \r\n"],[-1,""],[0,"                "]],"start1":1771,"start2":1771,"length1":32,"length2":32},{"diffs":[[0,"            "],[1,"#"],[0,"print str(sc"]],"start1":1791,"start2":1791,"length1":24,"length2":25},{"diffs":[[0,"uf\r\n        "],[1,"#"],[0,"print \"%s: %"]],"start1":2728,"start2":2728,"length1":24,"length2":25},{"diffs":[[0,"  \r\n    "],[1,"#"],[0,"print \"H"]],"start1":2777,"start2":2777,"length1":16,"length2":17},{"diffs":[[0,"e_aux)\r\n    "],[-1,"#"],[0,"print Happy_"]],"start1":2840,"start2":2840,"length1":25,"length2":24}]],"length":2892,"saved":false}
{"ts":1368408222834,"patch":[[{"diffs":[[0,"\r\n\r\n"],[1,"#"],[0,"try:\r\n"],[-1,"    "],[0,"#Ope"]],"start1":86,"start2":86,"length1":18,"length2":15},{"diffs":[[0," dict \r\n"],[-1,"    "],[0,"#afinnfi"]],"start1":140,"start2":140,"length1":20,"length2":16},{"diffs":[[0,".txt\")\r\n"],[-1,"    "],[0,"afinnfil"]],"start1":176,"start2":176,"length1":20,"length2":16},{"diffs":[[0,"gv[1])\r\n"],[-1,"    "],[0,"scores ="]],"start1":207,"start2":207,"length1":20,"length2":16},{"diffs":[[0,"ionary\r\n"],[-1,"    "],[0,"for line"]],"start1":253,"start2":253,"length1":20,"length2":16},{"diffs":[[0,"nfile:\r\n"],[-1,"    "],[0,"  term, "]],"start1":277,"start2":277,"length1":20,"length2":16},{"diffs":[[0,"acter\"\r\n"],[-1,"    "],[0,"  scores"]],"start1":369,"start2":369,"length1":20,"length2":16},{"diffs":[[0,"teger.\r\n"],[-1,"    \r\n    "],[1,"\r\n"],[0,"#Open fw"]],"start1":434,"start2":434,"length1":26,"length2":18},{"diffs":[[0,"output\r\n"],[-1,"    "],[0,"#sentime"]],"start1":475,"start2":475,"length1":20,"length2":16},{"diffs":[[0,"','w')\r\n"],[-1,"    \r\n    "],[1,"\r\n"],[0,"#Open fr"]],"start1":533,"start2":533,"length1":26,"length2":18},{"diffs":[[0,"m data\r\n"],[-1,"    "],[0,"tweet_fi"]],"start1":565,"start2":565,"length1":20,"length2":16},{"diffs":[[0,"gv[2])\r\n"],[-1,"    \r\n    "],[1,"\r\n"],[0,"#will us"]],"start1":597,"start2":597,"length1":26,"length2":18},{"diffs":[[0," words\r\n"],[-1,"    "],[0,"pattern_"]],"start1":652,"start2":652,"length1":20,"length2":16},{"diffs":[[0,"\"\\W+\")\r\n"],[-1,"    \r\n    "],[1,"\r\n"],[0,"score = "]],"start1":688,"start2":688,"length1":26,"length2":18},{"diffs":[[0,"re = 0\r\n"],[-1,"    "],[0,"word_aux"]],"start1":701,"start2":701,"length1":20,"length2":16},{"diffs":[[0,"x = \"\"\r\n"],[-1,"    "],[0,"state_au"]],"start1":716,"start2":716,"length1":20,"length2":16},{"diffs":[[0,"x = \"\"\r\n"],[-1,"    "],[0,"#index ="]],"start1":732,"start2":732,"length1":20,"length2":16},{"diffs":[[0,"ex = 0\r\n"],[-1,"    \r\n    "],[1,"\r\n"],[0,"UF = {}\r"]],"start1":744,"start2":744,"length1":26,"length2":18},{"diffs":[[0,"F = {}\r\n"],[-1,"    "],[0,"for json"]],"start1":755,"start2":755,"length1":20,"length2":16},{"diffs":[[0,"file:#Line\r\n"],[-1,"    "],[0,"    if json."]],"start1":787,"start2":787,"length1":28,"length2":24},{"diffs":[[0,"e:\r\n        "],[-1,"    "],[0,"if str(json."]],"start1":844,"start2":844,"length1":28,"length2":24},{"diffs":[[0,"        "],[-1,"    "],[0,"#for key"]],"start1":926,"start2":926,"length1":20,"length2":16},{"diffs":[[0,"        "],[-1," "],[-1,"   "],[0,"#    if "]],"start1":977,"start2":977,"length1":20,"length2":16},{"diffs":[[0,"            "],[-1,"    "],[0,"for word in "]],"start1":1110,"start2":1110,"length1":28,"length2":24},{"diffs":[[0,"                "],[-1," "],[-1,"   "],[0,"score = score + "]],"start1":1210,"start2":1210,"length1":36,"length2":32},{"diffs":[[0,"rd, 0)\r\n"],[-1,"    "],[0,"        "]],"start1":1255,"start2":1255,"length1":20,"length2":16},{"diffs":[[0,"            "],[-1," "],[-1,"   \r\n    "],[1,"\r\n"],[0,"            "]],"start1":1319,"start2":1319,"length1":34,"length2":26},{"diffs":[[0,"        "],[-1," "],[-1,"   "],[0,"#UF[valu"]],"start1":1421,"start2":1421,"length1":20,"length2":16},{"diffs":[[0," + \"\\t\" +value\r\n"],[-1,"    "],[0,"            #sta"]],"start1":1452,"start2":1452,"length1":36,"length2":32},{"diffs":[[0,"            "],[-1,"    \r\n    "],[1,"\r\n"],[0,"            "]],"start1":1630,"start2":1630,"length1":34,"length2":26},{"diffs":[[0,"        "],[-1,"  "],[-1,"  "],[0,"#Calcula"]],"start1":1714,"start2":1714,"length1":20,"length2":16},{"diffs":[[0,"re happy state\r\n"],[-1,"    "],[0,"            for "]],"start1":1745,"start2":1745,"length1":36,"length2":32},{"diffs":[[0,"            "],[-1,"   "],[-1," "],[0,"score_uf, uf"]],"start1":1818,"start2":1818,"length1":28,"length2":24},{"diffs":[[0,"            "],[-1,"    "],[0,"if str(uf) ="]],"start1":1872,"start2":1872,"length1":28,"length2":24},{"diffs":[[0,"                "],[-1,"   "],[-1," "],[0,"score = score + "]],"start1":1915,"start2":1915,"length1":36,"length2":32},{"diffs":[[0,"            "],[-1,"    \r\n    "],[1,"\r\n"],[0,"            "]],"start1":1966,"start2":1966,"length1":34,"length2":26},{"diffs":[[0,"        "],[-1,"    "],[0,"#index ="]],"start1":2034,"start2":2034,"length1":20,"length2":16},{"diffs":[[0," 1\r\n            "],[-1,"    "],[0,"\r\n              "]],"start1":2058,"start2":2058,"length1":36,"length2":32},{"diffs":[[0,"  \r\n            "],[-1,"    "],[0,"score = 0\r\n     "]],"start1":2072,"start2":2072,"length1":36,"length2":32},{"diffs":[[0,"re = 0\r\n"],[-1,"    "],[0,"        "]],"start1":2091,"start2":2091,"length1":20,"length2":16},{"diffs":[[0,"        "],[-1,"    "],[0,"word_aux"]],"start1":2131,"start2":2131,"length1":20,"length2":16},{"diffs":[[0," word_aux = \"\"\r\n"],[-1,"    "],[0,"            brea"]],"start1":2138,"start2":2138,"length1":36,"length2":32},{"diffs":[[0,"    "],[-1,"    \r\n    \r\n    "],[1,"\r\n\r\n"],[0,"twee"]],"start1":2175,"start2":2175,"length1":24,"length2":12},{"diffs":[[0,"lose()\r\n"],[-1,"    "],[0,"afinnfil"]],"start1":2195,"start2":2195,"length1":20,"length2":16},{"diffs":[[0,"lose()\r\n"],[-1,"    "],[0,"#Calcula"]],"start1":2214,"start2":2214,"length1":20,"length2":16},{"diffs":[[0," state\r\n"],[-1,"    "],[0,"Happy_UF"]],"start1":2253,"start2":2253,"length1":20,"length2":16},{"diffs":[[0,"F = \"\"\r\n"],[-1,"    "],[0,"score_au"]],"start1":2268,"start2":2268,"length1":20,"length2":16},{"diffs":[[0,"= -100\r\n"],[-1,"    "],[0,"for key,"]],"start1":2286,"start2":2286,"length1":20,"length2":16},{"diffs":[[0,"v,k)):\r\n    "],[-1," "],[-1,"   "],[0,"score, uf  ="]],"start1":2354,"start2":2354,"length1":28,"length2":24},{"diffs":[[0,"\")\r\n    "],[-1,"  "],[-1,"  "],[0,"if int(s"]],"start1":2394,"start2":2394,"length1":20,"length2":16},{"diffs":[[0,"x:\r\n        "],[-1,"  "],[-1,"  "],[0,"score_aux = "]],"start1":2426,"start2":2426,"length1":28,"length2":24},{"diffs":[[0,"        "],[-1,"    "],[0,"Happy_UF"]],"start1":2462,"start2":2462,"length1":20,"length2":16},{"diffs":[[0,"F = uf\r\n    "],[-1,"  "],[-1,"  "],[0,"#print \"%s: "]],"start1":2477,"start2":2477,"length1":28,"length2":24},{"diffs":[[0,"f)\r\n    "],[-1,"    \r\n    "],[1,"\r\n"],[0,"#print \""]],"start1":2516,"start2":2516,"length1":26,"length2":18},{"diffs":[[0,"e_aux)\r\n"],[-1,"    "],[0,"print Ha"]],"start1":2581,"start2":2581,"length1":20,"length2":16},{"diffs":[[0,"ppy_UF\r\n"],[1,"#"],[0,"except: "]],"start1":2597,"start2":2597,"length1":16,"length2":17},{"diffs":[[0,"cept: \r\n"],[1,"#"],[0,"    pass"]],"start1":2608,"start2":2608,"length1":16,"length2":17}]],"length":2631,"saved":false}
{"ts":1368408238522,"patch":[[{"diffs":[[0,"\r\n\r\n"],[-1,"#"],[0,"try:\r\n"],[1,"    "],[0,"#Ope"]],"start1":86,"start2":86,"length1":15,"length2":18},{"diffs":[[0," dict \r\n"],[1,"    "],[0,"#afinnfi"]],"start1":143,"start2":143,"length1":16,"length2":20},{"diffs":[[0,".txt\")\r\n"],[1,"    "],[0,"afinnfil"]],"start1":183,"start2":183,"length1":16,"length2":20},{"diffs":[[0,"gv[1])\r\n"],[1,"    "],[0,"scores ="]],"start1":218,"start2":218,"length1":16,"length2":20},{"diffs":[[0,"ionary\r\n"],[1,"    "],[0,"for line"]],"start1":268,"start2":268,"length1":16,"length2":20},{"diffs":[[0,"nfile:\r\n"],[1,"    "],[0,"  term, "]],"start1":296,"start2":296,"length1":16,"length2":20},{"diffs":[[0,"acter\"\r\n"],[1,"    "],[0,"  scores"]],"start1":392,"start2":392,"length1":16,"length2":20},{"diffs":[[0,"teger.\r\n"],[-1,"\r\n"],[1,"    \r\n    "],[0,"#Open fw"]],"start1":461,"start2":461,"length1":18,"length2":26},{"diffs":[[0,"output\r\n"],[1,"    "],[0,"#sentime"]],"start1":510,"start2":510,"length1":16,"length2":20},{"diffs":[[0,"','w')\r\n"],[-1,"\r\n"],[1,"    \r\n    "],[0,"#Open fr"]],"start1":572,"start2":572,"length1":18,"length2":26},{"diffs":[[0,"m data\r\n"],[1,"    "],[0,"tweet_fi"]],"start1":612,"start2":612,"length1":16,"length2":20},{"diffs":[[0,"gv[2])\r\n"],[-1,"\r\n"],[1,"    \r\n    "],[0,"#will us"]],"start1":648,"start2":648,"length1":18,"length2":26},{"diffs":[[0," words\r\n"],[1,"    "],[0,"pattern_"]],"start1":711,"start2":711,"length1":16,"length2":20},{"diffs":[[0,"\"\\W+\")\r\n"],[-1,"\r\n"],[1,"    \r\n    "],[0,"score = "]],"start1":751,"start2":751,"length1":18,"length2":26},{"diffs":[[0,"re = 0\r\n"],[1,"    "],[0,"word_aux"]],"start1":772,"start2":772,"length1":16,"length2":20},{"diffs":[[0,"x = \"\"\r\n"],[1,"    "],[0,"state_au"]],"start1":791,"start2":791,"length1":16,"length2":20},{"diffs":[[0,"x = \"\"\r\n"],[1,"    "],[0,"#index ="]],"start1":811,"start2":811,"length1":16,"length2":20},{"diffs":[[0,"ex = 0\r\n"],[-1,"\r\n"],[1,"    \r\n    "],[0,"UF = {}\r"]],"start1":827,"start2":827,"length1":18,"length2":26},{"diffs":[[0,"F = {}\r\n"],[1,"    "],[0,"for json"]],"start1":846,"start2":846,"length1":16,"length2":20},{"diffs":[[0,"file:#Line\r\n"],[1,"    "],[0,"    if json."]],"start1":882,"start2":882,"length1":24,"length2":28},{"diffs":[[0,"e:\r\n        "],[1,"    "],[0,"if str(json."]],"start1":943,"start2":943,"length1":24,"length2":28},{"diffs":[[0,"        "],[1,"    "],[0,"#for key"]],"start1":1029,"start2":1029,"length1":16,"length2":20},{"diffs":[[0,"        "],[1," "],[1,"   "],[0,"#    if "]],"start1":1084,"start2":1084,"length1":16,"length2":20},{"diffs":[[0,"            "],[1,"    "],[0,"for word in "]],"start1":1221,"start2":1221,"length1":24,"length2":28},{"diffs":[[0,"                "],[1," "],[1,"   "],[0,"score = score + "]],"start1":1325,"start2":1325,"length1":32,"length2":36},{"diffs":[[0,"rd, 0)\r\n"],[1,"    "],[0,"        "]],"start1":1374,"start2":1374,"length1":16,"length2":20},{"diffs":[[0," \"\r\n            "],[1," "],[-1,"\r\n"],[1,"   \r\n    "],[0,"            citi"]],"start1":1438,"start2":1438,"length1":34,"length2":42},{"diffs":[[0,"        "],[1," "],[1,"   "],[0,"#UF[valu"]],"start1":1552,"start2":1552,"length1":16,"length2":20},{"diffs":[[0," + \"\\t\" +value\r\n"],[1,"    "],[0,"            #sta"]],"start1":1587,"start2":1587,"length1":32,"length2":36},{"diffs":[[0,"']\r\n            "],[-1,"\r\n"],[1,"    \r\n    "],[0,"            #pri"]],"start1":1765,"start2":1765,"length1":34,"length2":42},{"diffs":[[0,"        "],[1,"  "],[1,"  "],[0,"#Calcula"]],"start1":1861,"start2":1861,"length1":16,"length2":20},{"diffs":[[0,"re happy state\r\n"],[1,"    "],[0,"            for "]],"start1":1896,"start2":1896,"length1":32,"length2":36},{"diffs":[[0,"            "],[1,"   "],[1," "],[0,"score_uf, uf"]],"start1":1973,"start2":1973,"length1":24,"length2":28},{"diffs":[[0,"            "],[1,"    "],[0,"if str(uf) ="]],"start1":2031,"start2":2031,"length1":24,"length2":28},{"diffs":[[0,"                "],[1,"   "],[1," "],[0,"score = score + "]],"start1":2078,"start2":2078,"length1":32,"length2":36},{"diffs":[[0,"                "],[-1,"\r\n"],[1,"    \r\n    "],[0,"            UF[v"]],"start1":2129,"start2":2129,"length1":34,"length2":42},{"diffs":[[0,"            "],[1,"    "],[0,"#index = ind"]],"start1":2205,"start2":2205,"length1":24,"length2":28},{"diffs":[[0," 1\r\n            "],[1,"    "],[0,"\r\n            sc"]],"start1":2237,"start2":2237,"length1":32,"length2":36},{"diffs":[[0,"  \r\n            "],[1,"    "],[0,"score = 0\r\n     "]],"start1":2255,"start2":2255,"length1":32,"length2":36},{"diffs":[[0," score = 0\r\n"],[1,"    "],[0,"            "]],"start1":2274,"start2":2274,"length1":24,"length2":28},{"diffs":[[0,"            "],[1,"    "],[0,"word_aux = \""]],"start1":2318,"start2":2318,"length1":24,"length2":28},{"diffs":[[0," word_aux = \"\"\r\n"],[1,"    "],[0,"            brea"]],"start1":2333,"start2":2333,"length1":32,"length2":36},{"diffs":[[0,"\r\n      "],[-1,"\r\n\r\n"],[1,"    \r\n    \r\n    "],[0,"tweet_fi"]],"start1":2370,"start2":2370,"length1":20,"length2":32},{"diffs":[[0,"lose()\r\n"],[1,"    "],[0,"afinnfil"]],"start1":2406,"start2":2406,"length1":16,"length2":20},{"diffs":[[0,"lose()\r\n"],[1,"    "],[0,"#Calcula"]],"start1":2429,"start2":2429,"length1":16,"length2":20},{"diffs":[[0," state\r\n"],[1,"    "],[0,"Happy_UF"]],"start1":2472,"start2":2472,"length1":16,"length2":20},{"diffs":[[0,"F = \"\"\r\n"],[1,"    "],[0,"score_au"]],"start1":2491,"start2":2491,"length1":16,"length2":20},{"diffs":[[0,"= -100\r\n"],[1,"    "],[0,"for key,"]],"start1":2513,"start2":2513,"length1":16,"length2":20},{"diffs":[[0,"v,k)):\r\n    "],[1," "],[1,"   "],[0,"score, uf  ="]],"start1":2585,"start2":2585,"length1":24,"length2":28},{"diffs":[[0,"\")\r\n    "],[1,"  "],[1,"  "],[0,"if int(s"]],"start1":2629,"start2":2629,"length1":16,"length2":20},{"diffs":[[0,"x:\r\n        "],[1,"  "],[1,"  "],[0,"score_aux = "]],"start1":2665,"start2":2665,"length1":24,"length2":28},{"diffs":[[0,"e)\r\n        "],[1,"    "],[0,"Happy_UF = u"]],"start1":2701,"start2":2701,"length1":24,"length2":28},{"diffs":[[0,"F = uf\r\n    "],[1,"  "],[1,"  "],[0,"#print \"%s: "]],"start1":2724,"start2":2724,"length1":24,"length2":28},{"diffs":[[0,"f)\r\n    "],[-1,"\r\n"],[1,"    \r\n    "],[0,"#print \""]],"start1":2767,"start2":2767,"length1":18,"length2":26},{"diffs":[[0,"e_aux)\r\n"],[1,"    "],[0,"print Ha"]],"start1":2840,"start2":2840,"length1":16,"length2":20},{"diffs":[[0,"ppy_UF\r\n"],[-1,"#"],[0,"except: "]],"start1":2860,"start2":2860,"length1":17,"length2":16},{"diffs":[[0,"cept: \r\n"],[-1,"#"],[0,"    pass"]],"start1":2870,"start2":2870,"length1":17,"length2":16}]],"length":2892,"saved":false}
